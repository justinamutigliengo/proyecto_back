openapi: 3.0.1
info:
  title: API de Usuarios
  description: API para gestionar usuarios
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /api/users:
    get:
      tags:
        - Users
      summary: Obtener todos los usuarios
      description: Recuperar una lista de todos los usuarios
      responses:
        "200":
          description: Los usuarios fueron obtenidos satisfactoriamente de la base de datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
          "500":
            description: Error interno del servidor, usualmente generado por un query defectuoso o un fallo de conexión de la base de datos
  /api/users/{uid}:
    get:
      tags:
        - Users
      summary: Obtiene un usuario a partir de su id
      description: Recupera un usuario específico por su ID
      parameters:
        - name: uid
          in: path
          required: true
          description: id del usuario al que vamos a solicitar
          schema:
            type: string
      responses:
        "200":
          description: Usuario encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    $ref: "#/components/schemas/User"
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: Usuario no encontrado
    put:
      tags:
        - Users
      summary: Actualizar usuario por ID
      description: Actualiza un usuario específico por su ID
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario para actualizar
          schema:
            type: string
      requestBody:
        description: Datos del usuario a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Usuario actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Usuario actualizado
        "404":
          description: Usuario no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  error:
                    type: string
                    example: Usuario no encontrado
    delete:
      tags:
        - Users
      summary: Eliminar usuario por ID
      description: Eliminar un usuario específico por su ID
      parameters:
        - name: uid
          in: path
          required: true
          description: ID del usuario a eliminar
          schema:
            type: string
      responses:
        "200":
          description: Usuario eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Usuario eliminado
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          format: objectId
          description: Id autogenerado de mongoDB
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario, este campo es único
        password:
          type: string
          description: Contraseña hasheada del usuario
        role:
          type: string
          description: Rol del usuario (por ejemplo, "user" o "admin")
        pets:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
                format: objectId
                description: Id de la mascota referenciada
          description: Lista de mascotas asociadas al usuario
      example:
        _id: "ObjectId(alñdkjsasdjfoadsfa6sdf6as4fd9asdf)"
        first_name: Justina
        ast_name: Mutigliengo
        email: j@gmail.com
        password: $eghio436jlmglkf9ej3hgdlmh
        role: user
requestBodies:
  createUser:
    type: object
    properties:
      first_name:
        type: string
        description: Nombre del usuario
      last_name:
        type: string
        description: Apellido del usuario
      email:
        type: string
        description: Correo electrónico del usuario
      password:
        type: string
        description: Contraseña del usuario
      role:
        type: string
        description: Rol del usuario
    example:
      first_name: Justina
      last_name: Mutigliengo
      email: jususerapi@gmail.com
      password: "123456"
      role: user
